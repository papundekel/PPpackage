name: Test

on:
    push:
        branches-ignore:
            - main

jobs:
    build-metamanager:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4.1.1

            - name: Set up buildx
              uses: docker/setup-buildx-action@v3.0.0

            - name: Build image
              uses: docker/build-push-action@v5.1.0
              with:
                  context: ${{ github.workspace }}
                  target: metamanager
                  tags: docker.io/fackop/pppackage-metamanager:latest
                  outputs: type=docker,dest=/tmp/images/metamanager.tar
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Upload image artifact
              uses: actions/upload-artifact@v4.3.3
              with:
                  name: image-metamanager
                  path: /tmp/images/metamanager.tar
    build-updater:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4.1.1

            - name: Set up buildx
              uses: docker/setup-buildx-action@v3.0.0

            - name: Build image
              uses: docker/build-push-action@v5.1.0
              with:
                  context: ${{ github.workspace }}
                  target: updater
                  tags: docker.io/fackop/pppackage-updater:latest
                  outputs: type=docker,dest=/tmp/images/updater.tar
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Upload image artifact
              uses: actions/upload-artifact@v4.3.3
              with:
                  name: image-updater
                  path: /tmp/images/updater.tar
    build-repo-pacman:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4.1.1

            - name: Set up buildx
              uses: docker/setup-buildx-action@v3.0.0

            - name: Build pppackage-repository-driver-pacman
              uses: docker/build-push-action@v5.1.0
              with:
                  context: ${{ github.workspace }}
                  target: repository-driver-pacman
                  tags: docker.io/fackop/pppackage-repository-driver-pacman:latest
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
    build-repo-aur:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4.1.1

            - name: Set up buildx
              uses: docker/setup-buildx-action@v3.0.0

            - name: Build pppackage-repository-driver-aur
              uses: docker/build-push-action@v5.1.0
              with:
                  context: ${{ github.workspace }}
                  target: repository-driver-aur
                  tags: docker.io/fackop/pppackage-repository-driver-aur:latest
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
    build-repo-conan:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4.1.1

            - name: Set up buildx
              uses: docker/setup-buildx-action@v3.0.0

            - name: Build pppackage-repository-driver-conan
              uses: docker/build-push-action@v5.1.0
              with:
                  context: ${{ github.workspace }}
                  target: repository-driver-conan
                  tags: docker.io/fackop/pppackage-repository-driver-conan:latest
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
    build-repo-pp:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4.1.1

            - name: Set up buildx
              uses: docker/setup-buildx-action@v3.0.0

            - name: Build pppackage-repository-driver-pp
              uses: docker/build-push-action@v5.1.0
              with:
                  context: ${{ github.workspace }}
                  target: repository-driver-pp
                  tags: docker.io/fackop/pppackage-repository-driver-pp:latest
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
    build:
        runs-on: ubuntu-latest
        needs:
            - build-metamanager
            - build-updater
        steps:
            - uses: actions/checkout@v4.1.1

            - name: Install podman
              uses: awalsh128/cache-apt-pkgs-action@v1.4.2
              with:
                  packages: podman

            - name: Download seccomp.json
              run: sudo wget https://raw.githubusercontent.com/containers/common/main/pkg/seccomp/seccomp.json --output-document /etc/containers/seccomp.json

            - name: Cache products
              uses: actions/cache@v4.0.2
              with:
                  path: ${{ github.workspace }}/cache/product
                  key: cache-products

            - name: Download image artifacts
              uses: actions/download-artifact@v4.1.7
              with:
                  name: image-*
                  path: /tmp/images/

            - name: Load images
              run: |
                  docker load --input /tmp/images/metamanager.tar
                  docker load --input /tmp/images/updater.tar

            - name: Create directories
              run: |
                  mkdir -p root/ output/
                  mkdir -p cache/product/ cache/repository/conan/ cache/repository/PP/
                  mkdir -p database/archlinux-core/ database/archlinux-extra/ database/conancenter/ database/PP/

            - name: Update archlinux core database
              run: >
                  docker run --rm
                  --user $(id -u):$(id -g)
                  --mount type=bind,source=${{ github.workspace }}/database/archlinux-core/,target=/mnt/database/
                  --mount type=bind,source=${{ github.workspace }}/examples/update/repository-pacman.json,target=/mnt/repository.json
                  --env REPOSITORY=core
                  --env DATABASE_PATH=/mnt/database/
                  docker.io/fackop/pppackage-updater:latest
                  PPpackage.repository_driver.pacman
                  --repository /mnt/repository.json

            - name: Update archlinux extra database
              run: >
                  docker run --rm
                  --user $(id -u):$(id -g)
                  --mount type=bind,source=${{ github.workspace }}/database/archlinux-extra/,target=/mnt/database/
                  --mount type=bind,source=${{ github.workspace }}/examples/update/repository-pacman.json,target=/mnt/repository.json
                  --env REPOSITORY=extra
                  --env DATABASE_PATH=/mnt/database/
                  docker.io/fackop/pppackage-updater:latest
                  PPpackage.repository_driver.pacman
                  --repository /mnt/repository.json

            - name: Update conancenter database
              run: >
                  docker run --rm
                  --user $(id -u):$(id -g)
                  --mount type=bind,source=${{ github.workspace }}/database/conancenter/,target=/mnt/database/
                  --mount type=bind,source=${{ github.workspace }}/examples/update/repository-conancenter.json,target=/mnt/repository.json
                  --env DATABASE_PATH=/mnt/database/
                  docker.io/fackop/pppackage-updater:latest
                  PPpackage.repository_driver.conan
                  --repository /mnt/repository.json

            - name: Create default conan profile
              run: >
                  docker run --rm
                  --user $(id -u):$(id -g)
                  --mount type=bind,source=${{ github.workspace }}/database/conancenter/,target=/mnt/database/
                  --env CONAN_HOME=/mnt/database/cache/
                  --entrypoint conan
                  docker.io/fackop/pppackage-updater:latest
                  profile detect

            - name: Run PPpackage
              run: >
                  USER="$(id -u):$(id -g)" docker compose
                  --file .github/compose.yaml
                  run --rm
                  -T metamanager < examples/input/basic-arch-conan.json

            - name: See if ldconfig ran
              run: ls -l root/etc/ld.so.cache
