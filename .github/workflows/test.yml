name: Test

on:
    push:
        branches-ignore:
            - main

jobs:
    build-metamanager:
        runs-on: ubuntu-latest
        steps:
            - uses: docker/setup-buildx-action@v3.0.0

            - uses: docker/build-push-action@v5.3.0
              with:
                  target: metamanager
                  tags: docker.io/fackop/pppackage-metamanager:latest
                  outputs: type=docker,dest=/tmp/image-metamanager.tar
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - uses: actions/upload-artifact@v4.3.3
              with:
                  name: image-metamanager
                  path: /tmp/image-metamanager.tar
    build-solver:
        runs-on: ubuntu-latest
        steps:
            - uses: docker/setup-buildx-action@v3.0.0

            - uses: docker/build-push-action@v5.3.0
              with:
                  target: solver
                  tags: docker.io/fackop/pppackage-solver:latest
                  outputs: type=docker,dest=/tmp/image-solver.tar
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - uses: actions/upload-artifact@v4.3.3
              with:
                  name: image-solver
                  path: /tmp/image-solver.tar
    build-updater:
        runs-on: ubuntu-latest
        steps:
            - uses: docker/setup-buildx-action@v3.0.0

            - uses: docker/build-push-action@v5.3.0
              with:
                  target: updater
                  tags: docker.io/fackop/pppackage-updater:latest
                  outputs: type=docker,dest=/tmp/image-updater.tar
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - uses: actions/upload-artifact@v4.3.3
              with:
                  name: image-updater
                  path: /tmp/image-updater.tar
    test:
        runs-on: ubuntu-latest
        needs:
            - build-metamanager
            - build-updater
            - build-solver
        steps:
            - uses: actions/checkout@v4.1.1

            - name: Install podman
              uses: awalsh128/cache-apt-pkgs-action@v1.4.2
              with:
                  packages: podman

            - name: Download seccomp.json
              run: sudo wget https://raw.githubusercontent.com/containers/common/main/pkg/seccomp/seccomp.json --output-document /etc/containers/seccomp.json

            - name: Cache .PPpackage
              uses: actions/cache@v4.0.2
              with:
                  path: /home/runner/.PPpackage/
                  key: cache

            - name: Download image artifacts
              uses: actions/download-artifact@v4.1.7
              with:
                  pattern: image-*
                  path: /tmp/
                  merge-multiple: true

            - name: Load images
              run: |
                  docker load --input /tmp/image-metamanager.tar
                  docker load --input /tmp/image-updater.tar
                  podman load --input /tmp/image-solver.tar
                  podman tag localhost/latest:latest docker.io/fackop/pppackage-solver:latest

            - name: Create directories
              run: |
                  mkdir -p root/ output/ /home/runner/.PPpackage/ workdir/
                  cd /home/runner/.PPpackage/
                  mkdir -p cache/ repository/
                  cd repository/
                  mkdir -p 0/ 1/ 2/ 3/

            - name: Update archlinux core database
              run: >
                  docker run --rm
                  --user $(id -u):$(id -g)
                  --mount type=bind,source=/home/runner/.PPpackage/repository/0/,target=/mnt/repository/
                  --mount type=bind,source=${{ github.workspace }}/examples/update/repository-pacman.json,target=/mnt/repository.json
                  --env REPOSITORY=core
                  docker.io/fackop/pppackage-updater:latest
                  PPpackage.repository_driver.pacman
                  --data-path /mnt/repository/
                  --repository /mnt/repository.json

            - name: Update archlinux extra database
              run: >
                  docker run --rm
                  --user $(id -u):$(id -g)
                  --mount type=bind,source=/home/runner/.PPpackage/repository/1/,target=/mnt/repository/
                  --mount type=bind,source=${{ github.workspace }}/examples/update/repository-pacman.json,target=/mnt/repository.json
                  --env REPOSITORY=extra
                  docker.io/fackop/pppackage-updater:latest
                  PPpackage.repository_driver.pacman
                  --data-path /mnt/repository/
                  --repository /mnt/repository.json

            - name: Update AUR database
              run: >
                  docker run --rm
                  --user $(id -u):$(id -g)
                  --mount type=bind,source=/home/runner/.PPpackage/repository/2/,target=/mnt/repository/
                  --env DATABASE_PATH=/mnt/database/
                  docker.io/fackop/pppackage-updater:latest
                  PPpackage.repository_driver.AUR
                  --data-path /mnt/repository/

            - name: Check if conancenter database exists
              id: check_conancenter
              uses: andstor/file-existence-action@v3.0.0
              with:
                  files: database/conancenter/cache/

            - name: Update conancenter database
              if: steps.check_conancenter.outputs.files_exists == 'false'
              run: >
                  docker run --rm
                  --user $(id -u):$(id -g)
                  --mount type=bind,source=/home/runner/.PPpackage/repository/3/,target=/mnt/repository/
                  --mount type=bind,source=${{ github.workspace }}/examples/update/repository-conancenter.json,target=/mnt/repository.json
                  --env DATABASE_PATH=/mnt/database/
                  docker.io/fackop/pppackage-updater:latest
                  PPpackage.repository_driver.conan
                  --data-path /mnt/repository/
                  --repository /mnt/repository.json

            - name: Run PPpackage
              run: >
                  USER="$(id -u):$(id -g)" docker compose
                  --file .github/compose.yaml
                  run --rm
                  -T metamanager < examples/input/conan-build.json

            - name: Test alpm hooks (check if ldconfig ran)
              run: ls -l root/etc/ld.so.cache
    fakealpm:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4.1.1

            - name: Install fakealpm dependencies
              uses: awalsh128/cache-apt-pkgs-action@v1.4.2
              with:
                  packages: libalpm-dev gcc cmake ninja-build libboost-dev nlohmann-json3-dev

            - name: Build fakelpm
              run: ./installer/pacman/fakealpm/build.sh installer/pacman/fakealpm/ installer/pacman/fakealpm/build/ /usr/local
